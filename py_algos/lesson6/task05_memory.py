from task_05 import *  # импортирую файл с решением, чтобы все имена были в глобальных переменных
from memory_functions import *

globals_dict = globals().copy()  # копия, потому что во время вывода globals изменяется
only_my_vars_dict = {k: v for k, v in globals_dict.items() if to_keep(k)}  # словарь только с моими переменными
print(only_my_vars_dict)

show_memory(only_my_vars_dict)
"""
SIZE	:28
MIN_ITEM	:24
MAX_ITEM	:28
array	:256
59	:28
73	:28
16	:28
46	:28
21	:28
16	:28
51	:28
90	:28
9	:28
19	:28
54	:28
71	:28
42	:28
21	:28
42	:28
47	:28
16	:28
97	:28
89	:28
19	:28
idx_min	:28
idx_max	:28
i	:28
sum_list	:120
19	:28
54	:28
71	:28
42	:28
21	:28
42	:28
47	:28
16	:28
summ	:28
общий расход памяти на переменные: 1352 байт

вывод: попробовал испортить Ваше решение случайным добавлением листа, потому что по памяти смог с ним почти сравняться 
только из-за замены списка на кортеж...
получилась ожидаемо максимально нестабильная версия, замечен разброс от ~1060(что все равно меньше моих) до 1764 байт,
почти в два раза это мощно(но не уверен, весят ли одинаковые объекты в двух массивах два своих веса?)
"""
